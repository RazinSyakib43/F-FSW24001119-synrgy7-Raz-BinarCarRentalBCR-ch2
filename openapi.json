{
  "openapi": "3.0.3",
  "info": {
    "title": "Razin - Car Management Dashboard API 1.6",
    "description": "Welcome to the Binar Car Rental - Car Management Dashboard . This dashboard is designed to provide a comprehensive solution for managing car rentals efficiently. It offers a user-friendly interface for administrators to manage cars, users, and rental orders seamlessly.\n\nSome useful links:\n- [GitHub Repository](https://github.com/RazinSyakib43/Car-Management-Dashboard/tree/Challenge_6)\n- [ERD](https://dbdiagram.io/d/Razin-Car-Management-Dashboard-API-666aa385a179551be6c66564)",
    "contact": {
      "email": "muhammadrazin@gmail.com"
    },
    "version": "1.6.11"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1/dashboard/"
    }
  ],
  "tags": [
    {
      "name": "Auth (Login)",
      "description": "Endpoints related to User Authentication (Login) for member, admin, and superadmin"
    },
    {
      "name": "Auth (Register)",
      "description": "Endpoints related to User Authentication (Register) to register a new member and admin"
    },
    {
      "name": "Cars",
      "description": "Endpoints related to car management"
    },
    {
      "name": "Users",
      "description": "Endpoints related to user management"
    },
    {
      "name": "Users (Me)",
      "description": "Endpoints related to the currently logged-in user, based on their token"
    },
    {
      "name": "Orders",
      "description": "Endpoints related to order management"
    }
  ],
  "paths": {
    "/auth/login/superadmin": {
      "post": {
        "tags": [
          "Auth (Login)"
        ],
        "summary": "Login Superadmin",
        "description": "This is the login endpoint for superadmin to access the superadmin dashboard",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "ayano@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "iamayano"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - Login as Superadmin successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login as superadmin! Welcome, Ayanokoji Kiyotaka!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5hcnV0b0BnbWFpbC5jb20iLCJpYXQiOjE3MTgzNjA5NjUsImV4cCI6MTcxODQ0NzM2NX0.tLawICmoS0oAO7DFL0yo9efvhOJsWpX5S4jdla1yNvo"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Fail - Password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Password is incorrect"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not a superadmin"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Email not found or deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your email not found or has been deleted, please make a superadmin account first"
                    }
                  }
                },
                "example": {
                  "code": 404,
                  "status": "fail",
                  "message": "Your email not found or has been deleted, please register as superadmin first"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/admin": {
      "post": {
        "tags": [
          "Auth (Login)"
        ],
        "summary": "Login Admin",
        "description": "This is the login endpoint for admin to access the admin dashboard",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "naruto@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "iamnaruto"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - Login as Admin successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login as admin! Welcome, Naruto!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5hcnV0b0BnbWFpbC5jb20iLCJpYXQiOjE3MTgzNjA5NjUsImV4cCI6MTcxODQ0NzM2NX0.tLawICmoS0oAO7DFL0yo9efvhOJsWpX5S4jdla1yNvo"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Fail - Password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Password is incorrect"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not an admin"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Email not found or deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your email not found or has been deleted, please register as admin first"
                    }
                  }
                },
                "example": {
                  "code": 404,
                  "status": "fail",
                  "message": "Your email not found or has been deleted, please register as admin first"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/member": {
      "post": {
        "tags": [
          "Auth (Login)"
        ],
        "summary": "Login Member",
        "description": "This is the login endpoint for member to get access to the dashboard",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "razin@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "iamrazin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - Login as Member successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login as member! Welcome, Razin!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5hcnV0b0BnbWFpbC5jb20iLCJpYXQiOjE3MTgzNjA5NjUsImV4cCI6MTcxODQ0NzM2NX0.tLawICmoS0oAO7DFL0yo9efvhOJsWpX5S4jdla1yNvo"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Fail - Password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Password is incorrect"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not a member"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register/admin": {
      "post": {
        "tags": [
          "Auth (Register)"
        ],
        "summary": "Register Admin",
        "security": [
          {
            "auth": []
          }
        ],
        "description": "This endpoint is used to register a new admin. Only superadmins are authorized to access this endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Sebastian Vettel"
                  },
                  "email": {
                    "type": "string",
                    "example": "vettel@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "iamvettel"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - Admin created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User (Admin) created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 15
                        },
                        "name": {
                          "type": "string",
                          "example": "Sebastian Vettel"
                        },
                        "email": {
                          "type": "string",
                          "example": "vettel@gmail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "http://res.cloudinary.com/dowiubuw3/image/upload/v1718371585/zwrjqdcx5q9cj8nm536v.jpg"
                        },
                        "role": {
                          "type": "string",
                          "example": "admin"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-14T13:26:25.636Z"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-14T13:26:25.636Z"
                        },
                        "updated_by": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "This email is already taken"
                    }
                  }
                },
                "examples": {
                  "EmailAlreadyTaken": {
                    "summary": "Email already taken",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "This email is already taken"
                    }
                  },
                  "MissingFieldsName": {
                    "summary": "Missing required fields: name",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide name"
                    }
                  },
                  "MissingFieldsEmail": {
                    "summary": "Missing required fields: email",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide email"
                    }
                  },
                  "MissingFieldsPassword": {
                    "summary": "Missing required fields: password",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide password"
                    }
                  },
                  "NoImageUploaded": {
                    "summary": "No image file uploaded",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "No image file uploaded"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not a superadmin"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register/member": {
      "post": {
        "tags": [
          "Auth (Register)"
        ],
        "summary": "Register Admin",
        "description": "This endpoint is used to register a new member.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Mitsuha Miyamizu"
                  },
                  "email": {
                    "type": "string",
                    "example": "mitsuha@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "iammitsuha"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - Member created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User (Member) created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 15
                        },
                        "name": {
                          "type": "string",
                          "example": "Mitsuha Miyamizu"
                        },
                        "email": {
                          "type": "string",
                          "example": "mitsuha@gmail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "http://res.cloudinary.com/dowiubuw3/image/upload/v1719425557/mr16viuotnwfavwr1bpu.gif"
                        },
                        "role": {
                          "type": "string",
                          "example": "member"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-14T13:26:25.636Z"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "member - Mitsuha Miyamizu"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-14T13:26:25.636Z"
                        },
                        "updated_by": {
                          "type": "string",
                          "example": "member - Mitsuha Miyamizu"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "This email is already taken"
                    }
                  }
                },
                "examples": {
                  "EmailAlreadyTaken": {
                    "summary": "Email already taken",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "This email is already taken"
                    }
                  },
                  "MissingFieldsName": {
                    "summary": "Missing required fields: name",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide name"
                    }
                  },
                  "MissingFieldsEmail": {
                    "summary": "Missing required fields: email",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide email"
                    }
                  },
                  "MissingFieldsPassword": {
                    "summary": "Missing required fields: password",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide password"
                    }
                  },
                  "NoImageUploaded": {
                    "summary": "No image file uploaded",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "No image file uploaded"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get All Cars",
        "description": "Retrieves a list of all available cars in the system.",
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Include deleted cars in the response (true or false). If not provided, the default value is false and only active cars will be shown."
          },
          {
            "name": "isAvailable",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Show only available cars in the response (true or false). If not provided, the default value is false and all cars will be shown."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of cars.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Toyota Avanza"
                          },
                          "category": {
                            "type": "string",
                            "example": "MPV"
                          },
                          "price": {
                            "type": "integer",
                            "example": 200000
                          },
                          "image": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802244/gutvbvhpgapnheefhf6e.jpg"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-25T21:33:13.592Z"
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "system"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-25T21:33:13.592Z"
                          },
                          "updatedBy": {
                            "type": "string",
                            "example": "system"
                          },
                          "status": {
                            "type": "string",
                            "example": "active"
                          },
                          "deletedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "example": null
                          },
                          "deletedBy": {
                            "type": "string",
                            "nullable": true,
                            "example": null
                          },
                          "orderInfo": {
                            "type": "object",
                            "properties": {
                              "startRent": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-05-30T15:27:12.000Z"
                              },
                              "finishRent": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-06-02T15:27:12.000Z"
                              },
                              "orderStatus": {
                                "type": "string",
                                "example": "active"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "data": [
                    {
                      "id": 1,
                      "name": "Toyota Avanza",
                      "category": "MPV",
                      "price": 200000,
                      "image": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802244/gutvbvhpgapnheefhf6e.jpg",
                      "createdAt": "2024-06-25T21:33:13.592Z",
                      "createdBy": "system",
                      "updatedAt": "2024-06-25T21:33:13.592Z",
                      "updatedBy": "system",
                      "status": "active",
                      "deletedAt": null,
                      "deletedBy": null,
                      "orderInfo": {
                        "startRent": "2024-05-30T15:27:12.000Z",
                        "finishRent": "2024-06-02T15:27:12.000Z",
                        "orderStatus": "active"
                      }
                    },
                    {
                      "id": 2,
                      "name": "Toyota Innova",
                      "category": "MPV",
                      "price": 300000,
                      "image": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717801998/jbpmiacuohmbgmxqckdr.jpg",
                      "createdAt": "2024-06-25T21:33:13.592Z",
                      "createdBy": "system",
                      "updatedAt": "2024-06-25T21:33:13.592Z",
                      "updatedBy": "system",
                      "status": "active",
                      "deletedAt": null,
                      "deletedBy": null,
                      "orderInfo": {
                        "startRent": null,
                        "finishRent": null,
                        "orderStatus": null
                      }
                    },
                    "(More cars...)"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cars"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Adds a new car to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": ""
                  },
                  "category": {
                    "type": "string",
                    "example": ""
                  },
                  "price": {
                    "type": "integer",
                    "example": ""
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car added successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 10
                        },
                        "name": {
                          "type": "string",
                          "example": "Honda NSX 2024"
                        },
                        "category": {
                          "type": "string",
                          "example": "Supercar"
                        },
                        "price": {
                          "type": "integer",
                          "example": 2500000
                        },
                        "image": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dowiubuw3/image/upload/v1719436086/uf4bg5c7wbvpt7jyivjb.jpg"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-27T12:00:00.000Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "admin - Naruto"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-27T12:00:00.000Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "admin - Naruto"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "orderInfo": {
                          "type": "object",
                          "properties": {
                            "startRent": {
                              "type": "string",
                              "nullable": true
                            },
                            "finishRent": {
                              "type": "string",
                              "nullable": true
                            },
                            "orderStatus": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "message": "Car successfully created",
                  "data": {
                    "id": 10,
                    "name": "Honda NSX 2024",
                    "category": "Supercar",
                    "price": 2500000,
                    "image": "https://example.com/path/to/image.jpg",
                    "createdAt": "2024-06-27T12:00:00.000Z",
                    "createdBy": "user",
                    "updatedAt": "2024-06-27T12:00:00.000Z",
                    "updatedBy": "user",
                    "status": "active",
                    "orderInfo": {
                      "startRent": null,
                      "finishRent": null,
                      "orderStatus": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Missing Fields": {
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please fill all required fields (name, category, price, image)"
                    }
                  },
                  "No Image": {
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "No image file uploaded"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/search": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Searches for cars based on car name.",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name of the car to search for."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of cars matching the search query.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 5
                          },
                          "name": {
                            "type": "string",
                            "example": "Toyota Alphard"
                          },
                          "category": {
                            "type": "string",
                            "example": "MPV"
                          },
                          "price": {
                            "type": "integer",
                            "example": 500000
                          },
                          "image": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802466/tkl29imqw6osiy1qmj7b.jpg"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-25T21:33:13.592Z"
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "system"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-25T21:33:13.592Z"
                          },
                          "updatedBy": {
                            "type": "string",
                            "example": "system"
                          },
                          "status": {
                            "type": "string",
                            "example": "active"
                          },
                          "deletedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "deletedBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "orderInfo": {
                            "type": "object",
                            "properties": {
                              "startRent": {
                                "type": "string",
                                "nullable": true
                              },
                              "finishRent": {
                                "type": "string",
                                "nullable": true
                              },
                              "orderStatus": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "data": [
                    {
                      "id": 5,
                      "name": "Toyota Alphard",
                      "category": "MPV",
                      "price": 500000,
                      "image": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802466/tkl29imqw6osiy1qmj7b.jpg",
                      "createdAt": "2024-06-25T21:33:13.592Z",
                      "createdBy": "system",
                      "updatedAt": "2024-06-25T21:33:13.592Z",
                      "updatedBy": "system",
                      "status": "active",
                      "deletedAt": null,
                      "deletedBy": null,
                      "orderInfo": {
                        "startRent": null,
                        "finishRent": null,
                        "orderStatus": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Car not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car that you are looking for is not found"
                    }
                  }
                },
                "example": {
                  "code": 404,
                  "status": "fail",
                  "message": "Car that you are looking for is not found"
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Retrieves detailed information about a specific car by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the car to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed information about the specified car.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 6
                        },
                        "name": {
                          "type": "string",
                          "example": "Honda Civic"
                        },
                        "category": {
                          "type": "string",
                          "example": "Sedan"
                        },
                        "price": {
                          "type": "integer",
                          "example": 250000
                        },
                        "image": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802486/ovzqzqzqzqzqzqzqzqzq.jpg"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-25T21:33:13.592Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "system"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-25T21:33:13.592Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "system"
                        },
                        "status": {
                          "type": "string",
                          "example": "deleted"
                        },
                        "deletedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-05-30T15:27:12.000Z"
                        },
                        "deletedBy": {
                          "type": "string",
                          "example": "system"
                        },
                        "orderInfo": {
                          "type": "object",
                          "properties": {
                            "startRent": {
                              "type": "string",
                              "nullable": true
                            },
                            "finishRent": {
                              "type": "string",
                              "nullable": true
                            },
                            "orderStatus": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "data": {
                    "id": 6,
                    "name": "Honda Civic",
                    "category": "Sedan",
                    "price": 250000,
                    "image": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802486/ovzqzqzqzqzqzqzqzqzq.jpg",
                    "createdAt": "2024-06-25T21:33:13.592Z",
                    "createdBy": "system",
                    "updatedAt": "2024-06-25T21:33:13.592Z",
                    "updatedBy": "system",
                    "status": "deleted",
                    "deletedAt": "2024-05-30T15:27:12.000Z",
                    "deletedBy": "system",
                    "orderInfo": {
                      "startRent": null,
                      "finishRent": null,
                      "orderStatus": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car not found"
                    }
                  }
                },
                "example": {
                  "code": 404,
                  "status": "fail",
                  "message": "Car not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cars"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Updates the details of a specific car by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": ""
                  },
                  "category": {
                    "type": "string",
                    "example": ""
                  },
                  "price": {
                    "type": "integer",
                    "example": ""
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Car updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car with id 9 updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 9
                        },
                        "name": {
                          "type": "string",
                          "example": "Honda NSX 2025"
                        },
                        "category": {
                          "type": "string",
                          "example": "Supercar"
                        },
                        "price": {
                          "type": "integer",
                          "example": 3750000
                        },
                        "image": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dowiubuw3/image/upload/v1719436086/uf4bg5c7wbvpt7jyivjb.jpg"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-26T21:08:06.199Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "admin - Naruto"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-27T08:22:28.144Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "deletedAt": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "deletedBy": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "orderInfo": {
                          "type": "object",
                          "properties": {
                            "startRent": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "finishRent": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "orderStatus": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "message": "Car with id 9 updated successfully",
                  "data": {
                    "id": 9,
                    "name": "Honda NSX 2025",
                    "category": "Supercar",
                    "price": 3750000,
                    "image": "https://res.cloudinary.com/dowiubuw3/image/upload/v1719436086/uf4bg5c7wbvpt7jyivjb.jpg",
                    "createdAt": "2024-06-26T21:08:06.199Z",
                    "createdBy": "admin - Naruto",
                    "updatedAt": "2024-06-27T08:22:28.144Z",
                    "updatedBy": "superadmin - Ayanokoji Kiyotaka",
                    "status": "active",
                    "deletedAt": null,
                    "deletedBy": null,
                    "orderInfo": {
                      "startRent": null,
                      "finishRent": null,
                      "orderStatus": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cars"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Deletes a specific car from the system by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car with id 10 deleted successfully"
                    }
                  }
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "message": "Car with id 10 deleted successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                },
                "example": {
                  "code": 403,
                  "status": "Forbidden",
                  "message": "You're not allowed to access this endpoint"
                }
              }
            }
          },
          "404": {
            "description": "Car not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car not found"
                    }
                  }
                },
                "example": {
                  "code": 404,
                  "status": "fail",
                  "message": "Car not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get All Users",
        "description": "Retrieves a list of all users registered in the system.",
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Include deleted cars in the response (true or false). If not provided, the default value is false and only active cars will be shown."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Razin"
                          },
                          "email": {
                            "type": "string",
                            "example": "razin@gmail.com"
                          },
                          "avatar": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802244/gutvbvhpgapnheefhf6e.jpg"
                          },
                          "role": {
                            "type": "string",
                            "example": "member"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-25T21:33:13.600Z"
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "system"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-25T21:33:13.600Z"
                          },
                          "updatedBy": {
                            "type": "string",
                            "example": "system"
                          },
                          "status": {
                            "type": "string",
                            "example": "active"
                          },
                          "deletedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "example": null
                          },
                          "deletedBy": {
                            "type": "string",
                            "nullable": true,
                            "example": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Create a User",
        "description": "Registers a new user in the system.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": ""
                  },
                  "email": {
                    "type": "string",
                    "example": ""
                  },
                  "password": {
                    "type": "string",
                    "example": ""
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  },
                  "role": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User (superadmin) created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 16
                        },
                        "name": {
                          "type": "string",
                          "example": "Max Verstappen"
                        },
                        "email": {
                          "type": "string",
                          "example": "max@gmail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "http://res.cloudinary.com/dowiubuw3/image/upload/v1719561284/xsd6vta05di8ugq7mof0.jpg"
                        },
                        "role": {
                          "type": "string",
                          "example": "superadmin"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T07:54:43.517Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T07:54:43.517Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "This email is already taken"
                    }
                  }
                },
                "examples": {
                  "EmailAlreadyTaken": {
                    "summary": "Email already taken",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "This email is already taken"
                    }
                  },
                  "MissingFieldsName": {
                    "summary": "Missing required fields: name",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide name"
                    }
                  },
                  "MissingFieldsEmail": {
                    "summary": "Missing required fields: email",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide email"
                    }
                  },
                  "MissingFieldsPassword": {
                    "summary": "Missing required fields: password",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please provide password"
                    }
                  },
                  "NoImageUploaded": {
                    "summary": "No image file uploaded",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "No image file uploaded"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/by-id/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get a User by Id",
        "description": "Retrieves detailed information about a specific user by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A user object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 14
                        },
                        "name": {
                          "type": "string",
                          "example": "Mitsuha Miyamizu"
                        },
                        "email": {
                          "type": "string",
                          "example": "mitsuha@gmail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "http://res.cloudinary.com/dowiubuw3/image/upload/v1719484840/yxkonqj2ocsmanlwxo8d.webp"
                        },
                        "role": {
                          "type": "string",
                          "example": "admin"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-27T10:40:40.227Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-27T10:40:40.227Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "deletedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": null
                        },
                        "deletedBy": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found or has been deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found or has been deleted"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Edit a User Data",
        "description": "Updates the details of a specific user by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": ""
                  },
                  "email": {
                    "type": "string",
                    "example": ""
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  },
                  "role": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User with id 14 updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 14
                        },
                        "name": {
                          "type": "string",
                          "example": "Mitsuha Miyamizu"
                        },
                        "email": {
                          "type": "string",
                          "example": "mitsuha@gmail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "http://res.cloudinary.com/dowiubuw3/image/upload/v1719484840/yxkonqj2ocsmanlwxo8d.webp"
                        },
                        "role": {
                          "type": "string",
                          "example": "superadmin"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-27T10:40:40.227Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T07:59:47.889Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "superadmin - Sebastian Vettel"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "deletedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": null
                        },
                        "deletedBy": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "This email is already taken"
                    }
                  }
                },
                "examples": {
                  "EmailAlreadyTaken": {
                    "summary": "Email already taken",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "This email is already taken"
                    }
                  },
                  "MissingFields": {
                    "summary": "Missing one of the required fields: name, email, role, avatar",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please fill one of the required fields (name, email, role, avatar)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found or has been deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found or has been deleted"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Delete a User",
        "description": "Deletes a specific user from the system by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User (admin) with id 10 deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found or has been deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found or has been deleted"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users (Me)"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get Current User Data",
        "description": "Get Current User Profile, based on their token.",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Razin"
                        },
                        "email": {
                          "type": "string",
                          "example": "razin@gmail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802244/gutvbvhpgapnheefhf6e.jpg"
                        },
                        "role": {
                          "type": "string",
                          "example": "member"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-25T21:33:13.600Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "system"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-25T21:33:13.600Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "system"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "deletedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": null
                        },
                        "deletedBy": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found or has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account not found or has been deleted"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users (Me)"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Edit Current User Data",
        "description": "Updates the details of their profile, based on their token.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": ""
                  },
                  "email": {
                    "type": "string",
                    "example": ""
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your profile updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Muhammad Razin Syakib"
                        },
                        "email": {
                          "type": "string",
                          "example": "razin@gmail.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dowiubuw3/image/upload/v1717802244/gutvbvhpgapnheefhf6e.jpg"
                        },
                        "role": {
                          "type": "string",
                          "example": "member"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-25T21:33:13.600Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "system"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T09:23:20.312Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "member - Muhammad Razin Syakib"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "deletedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": null
                        },
                        "deletedBy": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "This email is already taken"
                    }
                  }
                },
                "examples": {
                  "EmailAlreadyTaken": {
                    "summary": "Email already taken",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "This email is already taken"
                    }
                  },
                  "MissingFields": {
                    "summary": "Missing one of the required fields: name, email, role, avatar",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Please fill one of the required fields (name, email, role, avatar)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found or has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account not found or has been deleted"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users (Me)"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Delete Current User Account",
        "description": "Deletes current user account, based on their token.",
        "responses": {
          "200": {
            "description": "User account deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account not found or has been deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get All Orders",
        "description": "Retrieve a list of all orders, including details such as user information, car details, rental periods, pricing, and status.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter orders by status ('active', 'completed', 'cancelled', or 'deleted')"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "userName": {
                            "type": "string",
                            "example": "Razin"
                          },
                          "userEmail": {
                            "type": "string",
                            "example": "razin@gmail.com"
                          },
                          "carName": {
                            "type": "string",
                            "example": "Toyota Avanza"
                          },
                          "startRent": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-05-30T15:27:12.000Z"
                          },
                          "finishRent": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-02T15:27:12.000Z"
                          },
                          "price": {
                            "type": "integer",
                            "example": 200000
                          },
                          "total_price": {
                            "type": "integer",
                            "example": 600000
                          },
                          "status": {
                            "type": "string",
                            "example": "active"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-28T16:23:55.545Z"
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "system"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-28T16:23:55.545Z"
                          },
                          "updatedBy": {
                            "type": "string",
                            "example": "system"
                          },
                          "deletedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "example": null
                          },
                          "deletedBy": {
                            "type": "string",
                            "nullable": true,
                            "example": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Orders not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "orders not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Create an Order",
        "description": "Creates a new order in the system.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_car": {
                    "type": "integer",
                    "description": "The ID of the car to be rented",
                    "example": 2
                  },
                  "id_user": {
                    "type": "integer",
                    "description": "The ID of the user renting the car",
                    "example": 3
                  },
                  "start_rent": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of the rental",
                    "example": "2024-06-07 15:20:00"
                  },
                  "rent_duration": {
                    "type": "integer",
                    "description": "The duration of the rental in days",
                    "example": 2
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the order",
                    "example": "active"
                  }
                },
                "required": [
                  "id_car",
                  "id_user",
                  "start_rent",
                  "rent_duration",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 5
                        },
                        "userName": {
                          "type": "string",
                          "example": "Frieren"
                        },
                        "userEmail": {
                          "type": "string",
                          "example": "frieren@gmail.com"
                        },
                        "carName": {
                          "type": "string",
                          "example": "Toyota Innova"
                        },
                        "startRent": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-07 15:20:00"
                        },
                        "finishRent": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-09T08:20:00.000Z"
                        },
                        "price": {
                          "type": "integer",
                          "example": 300000
                        },
                        "total_price": {
                          "type": "integer",
                          "example": 600000
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-01T22:33:06.820Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-01T22:33:06.820Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "carAlreadyRented": {
                    "summary": "Car is already rented",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Car is already rented"
                    }
                  },
                  "carRequired": {
                    "summary": "Car is required",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Car is required"
                    }
                  },
                  "userRequired": {
                    "summary": "User is required",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "User is required"
                    }
                  },
                  "startRentRequired": {
                    "summary": "Start rent is required",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Start rent is required"
                    }
                  },
                  "rentDurationRequired": {
                    "summary": "Rent duration is required",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Rent duration is required"
                    }
                  },
                  "statusRequired": {
                    "summary": "Status is required",
                    "value": {
                      "code": 400,
                      "status": "fail",
                      "message": "Status is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Get Order by ID",
        "description": "Retrieve detailed information about a specific order by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the order to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "userName": {
                          "type": "string",
                          "example": "Razin"
                        },
                        "userEmail": {
                          "type": "string",
                          "example": "razin@gmail.com"
                        },
                        "carName": {
                          "type": "string",
                          "example": "Toyota Avanza"
                        },
                        "startRent": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-05-30T15:27:12.000Z"
                        },
                        "finishRent": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-02T15:27:12.000Z"
                        },
                        "price": {
                          "type": "integer",
                          "example": 200000
                        },
                        "total_price": {
                          "type": "integer",
                          "example": 600000
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T16:23:55.545Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "system"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T16:23:55.545Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "system"
                        },
                        "deletedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": null
                        },
                        "deletedBy": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Update an Order by ID",
        "description": "Updates the details of an existing order based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the order to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_car": {
                    "type": "integer",
                    "description": "The ID of the car to be rented",
                    "example": 2
                  },
                  "id_user": {
                    "type": "integer",
                    "description": "The ID of the user renting the car",
                    "example": 3
                  },
                  "start_rent": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of the rental",
                    "example": "2024-06-07 15:20:00"
                  },
                  "rent_duration": {
                    "type": "integer",
                    "description": "The duration of the rental in days",
                    "example": 2
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the order",
                    "example": "active"
                  }
                },
                "required": [
                  "id_car",
                  "id_user",
                  "start_rent",
                  "rent_duration",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 5
                        },
                        "userName": {
                          "type": "string",
                          "example": "Frieren"
                        },
                        "userEmail": {
                          "type": "string",
                          "example": "frieren@gmail.com"
                        },
                        "carName": {
                          "type": "string",
                          "example": "Toyota Innova"
                        },
                        "startRent": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-07 15:20:00"
                        },
                        "finishRent": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-09T08:20:00.000Z"
                        },
                        "price": {
                          "type": "integer",
                          "example": 300000
                        },
                        "total_price": {
                          "type": "integer",
                          "example": 600000
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-01T22:33:06.820Z"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-01T22:33:06.820Z"
                        },
                        "updatedBy": {
                          "type": "string",
                          "example": "superadmin - Ayanokoji Kiyotaka"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please fill one of the required fields (car, user, start_rent, rent_duration, status)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "auth": []
          }
        ],
        "summary": "Delete an Order by ID",
        "description": "Deletes an existing order based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the order to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order with id 5 deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please login first or register if you don't have an account"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 403
                    },
                    "status": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not allowed to access this endpoint"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "auth": {
        "type": "http",
        "scheme": "bearer",
        "bearer": {
          "format": "JWT"
        }
      }
    }
  }
}